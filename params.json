{
  "name": "Autotiles-ui-control",
  "tagline": "New user interface to handle multiple data bind in responsive tiles pattern.",
  "body": "# AutoTiles-UI-Control - Plugin for new UI control\r\nNew user interface to handle multiple data bind in responsive tiles pattern.\r\n\r\n## **Generate new UI control with autotiles**\r\nCheck out the image to get an overview of what can be done with this plugin. \r\n\r\n## Themes\r\n![](https://raw.githubusercontent.com/Manikandarajan-Jegadeshwaran/AutoTiles-UI-Control/master/autotile_demo_image.png)\r\n\r\n## Install\r\nDownload and include [autotiles.js](https://raw.githubusercontent.com/Manikandarajan-Jegadeshwaran/AutoTiles-UI-Control/master/autotiles.js) and [autotiles.css](https://raw.githubusercontent.com/Manikandarajan-Jegadeshwaran/AutoTiles-UI-Control/master/autotiles.css)\r\n```javascript\r\n    <script src=\"bower_components/autotiles.min.js\"></script>\r\n    <script src=\"bower_components/autotiles.css\"></script>\r\n```\r\n## Usage  \r\n### Design \r\nHere is the example, how to create div to setup entire plugin data.\r\n```html\r\n    <html>\r\n      <body>\r\n          <div id='divAuto'>\r\n      </body>\r\n    </html>\r\n```\r\n### Invoke\r\nThe default way of invoking plugin to initiate plugin functionality. Here `Option` is used to setup additional arguments and it can be detaily explained below.\r\n\r\n```javascript\r\n      $(function () {\r\n        var Option = {\r\n            url: '../pluginData.asmx/GetData'  \\\\here I use webservice to fetch data\r\n        }\r\n        $('#divAuto').autotiles(Option);\r\n    });\r\n```\r\n\r\n### Invoke with options\r\nThe following are the complete options available for plugin to invoke.\r\n```javascript\r\n       $(function () {\r\n        var Option = {\r\n            url: '../pluginData.asmx/GetData'//\r\n             , arguments: { type: '1' }\r\n             , result: 'hdnResult'\r\n             , theme: 'greeny'\r\n             , validatekey: { key: 'ID' }\r\n             , onloaditem: [{ \"Name\": \"Moving tortoise\", \"ID\": 88, \"Code\": 88 }]\r\n             , onselect: function (obj) {\r\n                 console.log(obj);\r\n             }\r\n        }\r\n        $('#divAuto').autotiles(Option);\r\n    });\r\n```\r\n\r\n###Options\r\nFollowing are the options used in `autotiles.js` so be sure to check it out if in doubt. All the Options except `url` are handled with default settings, perhaps if the end user leave the options like `arguments, result, theme, ...`.\r\nNote - The option `url` is mandatory.\r\n\r\n####Url\r\nUsed to provide path for the service or location to access source. This option is mandatory.\r\n\r\n####Aruguments\r\nHere we can pass the additional arguments that are required based on requirements to access the source data successfully.\r\n\r\n####Result\r\nThis result option is used to set the hidden control ID with provided value. By default `hdnResult` is assigned.\r\n\r\n####Theme\r\nUser feels great here. Option like this mainly used for setting themes for the Autotiles control. By default `light` is assigned.\r\n   Available Themes\r\n   light\r\n   greeny\r\n   flower\r\n\r\n####ValidateKey\r\nThis option allow the user to specify the key to validate with the result. By default `ID` is assigned. User can provide the key based on their source data.\r\n\r\n####OnloadItems\r\nThis option is main used to pre pop-up the data with out any autocomplete, and it's mainly used to highlight the already selected data while loading the control at second time.\r\n\r\n####OnSelect\r\nThis option will trigger the callback function to perform user defined function.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}